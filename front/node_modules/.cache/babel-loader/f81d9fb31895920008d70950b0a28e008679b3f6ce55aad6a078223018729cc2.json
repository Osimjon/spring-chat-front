{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0420\\u0430\\u0431\\u043E\\u0442\\u044B Java\\\\Spring-chat-front\\\\front\\\\src\\\\TextBar.tsx\",\n  _s3 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Container, Input, useTheme } from \"@mui/material\";\nimport SendIcon from '@mui/icons-material/Send';\nimport { useQuery } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TextBar() {\n  _s3();\n  var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n  const theme = useTheme();\n  const [message, setMessage] = useState(\"\");\n  const [userName, setuserName] = useState(\"Admin\");\n  function useSendMessage(message, userName) {\n    _s();\n    const {\n      isLoading,\n      data: responseData\n    } = useQuery({\n      queryFn: async () => {\n        return fetch(\"http://localhost:8080/messages\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            message,\n            userName\n          })\n        }).then(response => response.json());\n      },\n      queryKey: [\"data\"]\n    });\n    return {\n      isLoading,\n      data: responseData\n    };\n  }\n  _s(useSendMessage, \"nwrRldYFaIU7wyJurCRxO0snz2c=\", false, function () {\n    return [useQuery];\n  });\n  const sendMessage = () => {\n    _s2();\n    const {\n      isLoading,\n      data\n    } = useQuery({\n      queryFn: async () => {\n        return fetch(\"http://localhost:8080/messages\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            message: message,\n            userName: userName\n          })\n        }).then(response => response.json());\n      },\n      queryKey: [\"data\"]\n    });\n    setMessage(\"\");\n    setuserName(\"\");\n  };\n  _s2(sendMessage, \"1zjW8LjbLVySvqo7jR/+Tc6m2Js=\", false, function () {\n    return [useQuery];\n  });\n  const handleSubmit = e => {\n    return setMessage(e.currentTarget.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"50%\",\n          height: \"40px\"\n        },\n        onChange: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: sendMessage,\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 12\n  }, this);\n}\n_s3(TextBar, \"kTGdXFNU5cERIq8WCGlXnSA/P9A=\", false, function () {\n  return [useTheme];\n});\n_c = TextBar;\nvar _c;\n$RefreshReg$(_c, \"TextBar\");","map":{"version":3,"names":["React","useState","Button","Container","Input","useTheme","SendIcon","useQuery","jsxDEV","_jsxDEV","TextBar","_s3","_s","$RefreshSig$","_s2","theme","message","setMessage","userName","setuserName","useSendMessage","isLoading","data","responseData","queryFn","fetch","method","body","JSON","stringify","then","response","json","queryKey","sendMessage","handleSubmit","e","currentTarget","value","children","maxWidth","style","width","height","onChange","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","$RefreshReg$"],"sources":["D:/Работы Java/Spring-chat-front/front/src/TextBar.tsx"],"sourcesContent":["import React, {ChangeEvent, useState} from \"react\";\r\nimport { Button, Container, Input, useTheme} from \"@mui/material\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport {useQuery} from \"react-query\";\r\n\r\nexport function TextBar() {\r\n\r\n    const theme = useTheme();\r\n\r\n    const [message, setMessage] = useState(\"\");\r\n    const [userName,setuserName] = useState(\"Admin\");\r\n\r\n    function useSendMessage(message, userName) {\r\n        const { isLoading, data: responseData } = useQuery({\r\n            queryFn: async () => {\r\n                return fetch(\"http://localhost:8080/messages\", {\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        message,\r\n                        userName,\r\n                    }),\r\n                })\r\n                    .then((response) => response.json());\r\n            },\r\n            queryKey: [\"data\"],\r\n        });\r\n\r\n        return { isLoading, data: responseData };\r\n    }\r\n\r\n    const sendMessage = () => {\r\n        const {isLoading, data} = useQuery({\r\n            queryFn: async () => {\r\n                return fetch(\"http://localhost:8080/messages\", {\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        message: message,\r\n                        userName: userName\r\n                    })\r\n                })\r\n                    .then(response => response.json())\r\n            },\r\n            queryKey: [\"data\"]\r\n        });\r\n        setMessage(\"\");\r\n        setuserName(\"\");\r\n\r\n\r\n    }\r\n\r\n    const handleSubmit = (e: ChangeEvent<HTMLInputElement>) => {\r\n        return setMessage(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return <div>\r\n        <Container maxWidth=\"xl\">\r\n            <Input style={{width: \"50%\", height: \"40px\"}} onChange={handleSubmit}/>\r\n            <Button variant=\"contained\" onClick={sendMessage}>\r\n                <SendIcon/>\r\n            </Button>\r\n        </Container>\r\n    </div>\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}