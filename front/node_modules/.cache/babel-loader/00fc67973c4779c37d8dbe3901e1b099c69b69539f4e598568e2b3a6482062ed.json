{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0420\\u0430\\u0431\\u043E\\u0442\\u044B Java\\\\Spring-chat-front\\\\front\\\\src\\\\TextBar.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Container, Input, useTheme } from \"@mui/material\";\nimport SendIcon from '@mui/icons-material/Send';\nimport { useMutation, useQuery } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TextBar() {\n  _s2();\n  var _s = $RefreshSig$();\n  const theme = useTheme();\n  const [message, setMessage] = useState(\"\");\n  const [userName, setuserName] = useState(\"Admin\");\n\n  // function useSendMessage(message, userName) {\n  //     const { isLoading, data: responseData } = useQuery({\n  //         queryFn: async () => {\n  //             return fetch(\"http://localhost:8080/messages\", {\n  //                 method: \"POST\",\n  //                 body: JSON.stringify({\n  //                     message,\n  //                     userName,\n  //                 }),\n  //             })\n  //                 .then((response) => response.json());\n  //         },\n  //         queryKey: [\"data\"],\n  //     });\n  //\n  //     return { isLoading, data: responseData };\n  // }\n  const {\n    mutate,\n    isLoading\n  } = useMutation(async (message, userName) => {\n    const response = await fetch(\"http://localhost:8080/messages\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        message,\n        userName\n      })\n    });\n    if (response.ok) {\n      return await response.json(); // Возвращайте данные при успехе\n    } else {\n      throw new Error(\"Ошибка при отправке сообщения\");\n    }\n  });\n  const sendMessage = () => {\n    _s();\n    const {\n      isLoading,\n      data\n    } = useQuery({\n      queryFn: async () => {\n        return fetch(\"http://localhost:8080/messages\", {\n          method: \"POST\",\n          body: JSON.stringify({\n            message: message,\n            userName: userName\n          })\n        }).then(response => response.json());\n      },\n      queryKey: [\"data\"]\n    });\n    setMessage(\"\");\n    setuserName(\"\");\n  };\n  _s(sendMessage, \"1zjW8LjbLVySvqo7jR/+Tc6m2Js=\", false, function () {\n    return [useQuery];\n  });\n  const handleSubmit = e => {\n    return setMessage(e.currentTarget.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"50%\",\n          height: \"40px\"\n        },\n        onChange: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: sendMessage,\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 12\n  }, this);\n}\n_s2(TextBar, \"T/gDdh7ybHr/UCvL1vd25FBCHIk=\", false, function () {\n  return [useTheme, useMutation];\n});\n_c = TextBar;\nvar _c;\n$RefreshReg$(_c, \"TextBar\");","map":{"version":3,"names":["React","useState","Button","Container","Input","useTheme","SendIcon","useMutation","useQuery","jsxDEV","_jsxDEV","TextBar","_s2","_s","$RefreshSig$","theme","message","setMessage","userName","setuserName","mutate","isLoading","response","fetch","method","body","JSON","stringify","ok","json","Error","sendMessage","data","queryFn","then","queryKey","handleSubmit","e","currentTarget","value","children","maxWidth","style","width","height","onChange","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","$RefreshReg$"],"sources":["D:/Работы Java/Spring-chat-front/front/src/TextBar.tsx"],"sourcesContent":["import React, {ChangeEvent, useState} from \"react\";\r\nimport { Button, Container, Input, useTheme} from \"@mui/material\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport {useMutation, useQuery} from \"react-query\";\r\n\r\nexport function TextBar() {\r\n\r\n    const theme = useTheme();\r\n\r\n    const [message, setMessage] = useState(\"\");\r\n    const [userName,setuserName] = useState(\"Admin\");\r\n\r\n    // function useSendMessage(message, userName) {\r\n    //     const { isLoading, data: responseData } = useQuery({\r\n    //         queryFn: async () => {\r\n    //             return fetch(\"http://localhost:8080/messages\", {\r\n    //                 method: \"POST\",\r\n    //                 body: JSON.stringify({\r\n    //                     message,\r\n    //                     userName,\r\n    //                 }),\r\n    //             })\r\n    //                 .then((response) => response.json());\r\n    //         },\r\n    //         queryKey: [\"data\"],\r\n    //     });\r\n    //\r\n    //     return { isLoading, data: responseData };\r\n    // }\r\n    const { mutate, isLoading } = useMutation(async (message:string, userName:string) => {\r\n        const response = await fetch(\"http://localhost:8080/messages\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ message, userName }),\r\n        });\r\n\r\n        if (response.ok) {\r\n            return await response.json(); // Возвращайте данные при успехе\r\n        } else {\r\n            throw new Error(\"Ошибка при отправке сообщения\");\r\n        }\r\n    });\r\n\r\n    const sendMessage = () => {\r\n        const {isLoading, data} = useQuery({\r\n            queryFn: async () => {\r\n                return fetch(\"http://localhost:8080/messages\", {\r\n                    method: \"POST\",\r\n                    body: JSON.stringify({\r\n                        message: message,\r\n                        userName: userName\r\n                    })\r\n                })\r\n                    .then(response => response.json())\r\n            },\r\n            queryKey: [\"data\"]\r\n        });\r\n        setMessage(\"\");\r\n        setuserName(\"\");\r\n\r\n\r\n    }\r\n\r\n    const handleSubmit = (e: ChangeEvent<HTMLInputElement>) => {\r\n        return setMessage(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return <div>\r\n        <Container maxWidth=\"xl\">\r\n            <Input style={{width: \"50%\", height: \"40px\"}} onChange={handleSubmit}/>\r\n            <Button variant=\"contained\" onClick={sendMessage}>\r\n                <SendIcon/>\r\n            </Button>\r\n        </Container>\r\n    </div>\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}