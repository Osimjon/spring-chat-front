{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0420\\u0430\\u0431\\u043E\\u0442\\u044B Java\\\\Spring-chat-front\\\\front\\\\src\\\\TextBar.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Container, Input, useTheme } from \"@mui/material\";\nimport SendIcon from '@mui/icons-material/Send';\nimport { useMutation } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TextBar() {\n  _s2();\n  var _s = $RefreshSig$();\n  const theme = useTheme();\n  const [message, setMessage] = useState(\"\");\n  const [userName, setUserName] = useState(\"Admin\");\n  const sendPostRequest = async (message, userName) => {\n    const response = await fetch(\"http://localhost:8080/messages\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        message,\n        userName\n      })\n    });\n    if (response.ok) {\n      return await response.json();\n    } else {\n      throw new Error(\"Ошибка при отправке сообщения\");\n    }\n  };\n  const sendMessage = () => {\n    _s();\n    const {\n      mutate,\n      isLoading\n    } = useMutation(sendPostRequest);\n    mutate({\n      message,\n      userName\n    }, {\n      mutationKey: [\"message\", message, \"userName\", userName],\n      onSuccess: () => {\n        console.log(\"Сообщение отправлено\");\n        setMessage(\"\"); // Очистите поле ввода\n      },\n      onError: error => {\n        console.error(error.message);\n      }\n    });\n    setMessage(\"\");\n    setUserName(\"\");\n  };\n  _s(sendMessage, \"P3rdV4dw3uiFGupzZd1dL4MA274=\", false, function () {\n    return [useMutation];\n  });\n  const handleSubmit = e => {\n    return setMessage(e.currentTarget.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"50%\",\n          height: \"40px\"\n        },\n        onChange: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: sendMessage,\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 12\n  }, this);\n}\n_s2(TextBar, \"oHVmqaWtyxnAn1V4GeI9JdLPUzE=\", false, function () {\n  return [useTheme];\n});\n_c = TextBar;\nvar _c;\n$RefreshReg$(_c, \"TextBar\");","map":{"version":3,"names":["React","useState","Button","Container","Input","useTheme","SendIcon","useMutation","jsxDEV","_jsxDEV","TextBar","_s2","_s","$RefreshSig$","theme","message","setMessage","userName","setUserName","sendPostRequest","response","fetch","method","body","JSON","stringify","ok","json","Error","sendMessage","mutate","isLoading","mutationKey","onSuccess","console","log","onError","error","handleSubmit","e","currentTarget","value","children","maxWidth","style","width","height","onChange","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","$RefreshReg$"],"sources":["D:/Работы Java/Spring-chat-front/front/src/TextBar.tsx"],"sourcesContent":["import React, {ChangeEvent, useState} from \"react\";\r\nimport { Button, Container, Input, useTheme} from \"@mui/material\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport {useMutation, useQuery} from \"react-query\";\r\n\r\nexport function TextBar() {\r\n\r\n    const theme = useTheme();\r\n\r\n    const [message, setMessage] = useState(\"\");\r\n    const [userName,setUserName] = useState(\"Admin\");\r\n\r\n    const sendPostRequest = async (message:string, userName:string) => {\r\n        const response = await fetch(\"http://localhost:8080/messages\", {\r\n            method: \"POST\",\r\n            body: JSON.stringify({ message, userName }),\r\n        });\r\n\r\n        if (response.ok) {\r\n            return await response.json();\r\n        } else {\r\n            throw new Error(\"Ошибка при отправке сообщения\");\r\n        }\r\n    };\r\n    const sendMessage = () => {\r\n        const { mutate, isLoading } = useMutation(sendPostRequest);\r\n\r\n        mutate({ message, userName }, {\r\n            mutationKey: [\"message\", message, \"userName\", userName],\r\n            onSuccess: () => {\r\n                console.log(\"Сообщение отправлено\");\r\n                setMessage(\"\"); // Очистите поле ввода\r\n            },\r\n            onError: (error) => {\r\n                console.error(error.message);\r\n            },\r\n        });\r\n        setMessage(\"\");\r\n        setUserName(\"\");\r\n    }\r\n\r\n\r\n\r\n    const handleSubmit = (e: ChangeEvent<HTMLInputElement>) => {\r\n        return setMessage(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return <div>\r\n        <Container maxWidth=\"xl\">\r\n            <Input style={{width: \"50%\", height: \"40px\"}} onChange={handleSubmit}/>\r\n            <Button variant=\"contained\" onClick={sendMessage}>\r\n                <SendIcon/>\r\n            </Button>\r\n        </Container>\r\n    </div>\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}