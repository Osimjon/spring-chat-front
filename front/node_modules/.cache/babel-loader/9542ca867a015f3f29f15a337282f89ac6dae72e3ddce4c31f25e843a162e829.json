{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0420\\u0430\\u0431\\u043E\\u0442\\u044B Java\\\\Spring-chat-front\\\\front\\\\src\\\\MessageList.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MessageList() {\n  _s();\n  const fetchMessages = async () => {\n    const res = await fetch(\"http://localhost:8080/chat/messages\");\n    return res.json();\n  };\n  useEffect(() => {\n    fetchMessages().then(setMessages);\n  }, []);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 12\n  }, this);\n}\n_s(MessageList, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","MessageList","_s","fetchMessages","res","fetch","json","useEffect","then","setMessages","isLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Работы Java/Spring-chat-front/front/src/MessageList.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {useQuery} from \"react-query\";\r\n\r\ntype messageType = {\r\n    id: string,\r\n    message: string,\r\n    userName: string\r\n    messageTime: string\r\n}\r\n\r\nexport function MessageList() {\r\n    const fetchMessages = async () => {\r\n        const res = await fetch(\"http://localhost:8080/chat/messages\");\r\n        return res.json();\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchMessages().then(setMessages);\r\n    }, [])\r\n\r\n    if (isLoading) return (\r\n        <div>Loading...</div>\r\n    )\r\n\r\n    return <div>\r\n        <ul>\r\n            {/*{messages?.map((message: messageType) => (*/}\r\n            {/*    <li key={message.id}>*/}\r\n            {/*        <div>*/}\r\n            {/*            <h5>{message.userName}</h5>*/}\r\n            {/*            <p>{message.message}</p>*/}\r\n            {/*        </div>*/}\r\n            {/*    </li>*/}\r\n            {/*))}*/}\r\n        </ul>\r\n    </div>\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAU1B,OAAO,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;IAC9D,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EACrB,CAAC;EAEDC,SAAS,CAAC,MAAM;IACZJ,aAAa,CAAC,CAAC,CAACK,IAAI,CAACC,WAAW,CAAC;EACrC,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIC,SAAS,EAAE,oBACXV,OAAA;IAAAW,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAGzB,oBAAOf,OAAA;IAAAW,QAAA,eACHX,OAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OASI;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AACV;AAACb,EAAA,CA1BeD,WAAW;AAAAe,EAAA,GAAXf,WAAW;AAAA,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}