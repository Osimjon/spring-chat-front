{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0420\\u0430\\u0431\\u043E\\u0442\\u044B Java\\\\Spring-chat-front\\\\front\\\\src\\\\TextBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Container, Input, useTheme } from \"@mui/material\";\nimport SendIcon from '@mui/icons-material/Send';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { Simulate } from \"react-dom/test-utils\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar error = Simulate.error;\nexport function TextBar() {\n  _s();\n  const theme = useTheme();\n  const [message, setMessage] = useState(\"\");\n  const [userName, setUserName] = useState(\"Admin\");\n  const queryClient = useQueryClient();\n  const sendMessageMutation = useMutation(async data => {\n    return await fetch(\"http://localhost:8080/chat/messages\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n  }, {\n    onSuccess: async () => {\n      console.log(\"Успешный успех!\");\n      await Promise.resolve(queryClient.invalidateQueries(\"messages\"));\n    },\n    onError: () => {\n      console.log(\"Ошибочная ошибка!\");\n      console.log(error);\n    }\n  });\n  const handleSendMessage = () => {\n    sendMessageMutation.mutate({\n      message,\n      userName\n    });\n    setMessage(\"\");\n  };\n  const handleInput = e => {\n    return setMessage(e.currentTarget.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"50%\",\n          height: \"40px\"\n        },\n        onChange: handleInput,\n        value: message,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleSendMessage,\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 12\n  }, this);\n}\n_s(TextBar, \"cuA6p/rfs3+Glj7IExD7qwYYNF4=\", false, function () {\n  return [useTheme, useQueryClient, useMutation];\n});\n_c = TextBar;\nvar _c;\n$RefreshReg$(_c, \"TextBar\");","map":{"version":3,"names":["React","useState","Button","Container","Input","useTheme","SendIcon","useMutation","useQueryClient","Simulate","jsxDEV","_jsxDEV","error","TextBar","_s","theme","message","setMessage","userName","setUserName","queryClient","sendMessageMutation","data","fetch","method","headers","body","JSON","stringify","onSuccess","console","log","Promise","resolve","invalidateQueries","onError","handleSendMessage","mutate","handleInput","e","currentTarget","value","children","maxWidth","style","width","height","onChange","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","$RefreshReg$"],"sources":["D:/Работы Java/Spring-chat-front/front/src/TextBar.tsx"],"sourcesContent":["import React, {ChangeEvent, useState} from \"react\";\r\nimport {Button, Container, Input, useTheme} from \"@mui/material\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport {useMutation, useQueryClient} from \"react-query\";\r\nimport {Simulate} from \"react-dom/test-utils\";\r\nimport error = Simulate.error;\r\n\r\nexport function TextBar() {\r\n\r\n    const theme = useTheme();\r\n\r\n    const [message, setMessage] = useState(\"\");\r\n    const [userName, setUserName] = useState(\"Admin\");\r\n    const queryClient = useQueryClient();\r\n\r\n    const sendMessageMutation = useMutation(\r\n        async (data: { message: string; userName: string }) => {\r\n            return await fetch(\"http://localhost:8080/chat/messages\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(data)\r\n            });\r\n        },\r\n        {\r\n            onSuccess: async () => {\r\n                console.log(\"Успешный успех!\")\r\n                await Promise.resolve(queryClient.invalidateQueries(\"messages\"));\r\n            },\r\n            onError: ()=>{\r\n                console.log(\"Ошибочная ошибка!\");\r\n                console.log(error);\r\n            }\r\n        }\r\n    )\r\n\r\n\r\n    const handleSendMessage = () => {\r\n        sendMessageMutation.mutate({message, userName,});\r\n        setMessage(\"\");\r\n    };\r\n\r\n    const handleInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        return setMessage(e.currentTarget.value);\r\n    }\r\n\r\n    return <div>\r\n        <Container maxWidth=\"xl\">\r\n            <Input style={{width: \"50%\", height: \"40px\"}} onChange={handleInput} value={message}  autoFocus />\r\n            <Button variant=\"contained\" onClick={handleSendMessage}>\r\n                <SendIcon/>\r\n            </Button>\r\n        </Container>\r\n    </div>\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}