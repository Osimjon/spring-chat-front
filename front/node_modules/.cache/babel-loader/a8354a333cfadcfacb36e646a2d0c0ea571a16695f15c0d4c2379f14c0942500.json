{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0420\\u0430\\u0431\\u043E\\u0442\\u044B Java\\\\Spring-chat-front\\\\front\\\\src\\\\MessageList.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchMessages = async () => {\n  const res = await fetch(\"http://localhost:8080/chat/messages\");\n  return res.json();\n};\nexport function MessageList() {\n  _s();\n  const {\n    data,\n    status\n  } = useQuery('messages', fetchMessages);\n  console.log(data);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: data\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 11\n  }, this);\n\n  // const {data: messages, isLoading} = useQuery({\n  //     queryFn: async () => {\n  //         const response = await fetch(\"http://localhost:8080/chat/messages\");\n  //         return await response.json();\n  //     },\n  //     queryKey: [\"data\"]\n  // })\n  // if (isLoading) return (\n  //     <div>Loading...</div>\n  // )\n\n  // return <div>\n  //     <ul>\n  //         {messages()}\n  //         {/*{messages?.map((message: messageType) => (*/}\n  //         {/*    <li key={message.id}>*/}\n  //         {/*        <div>*/}\n  //         {/*            <h5>{message.userName}</h5>*/}\n  //         {/*            <p>{message.message}</p>*/}\n  //         {/*        </div>*/}\n  //         {/*    </li>*/}\n  //         {/*))}*/}\n  //     </ul>\n  // </div>\n}\n_s(MessageList, \"Zxg8aNMC5DxRjb5USqHcIq+KPKs=\", false, function () {\n  return [useQuery];\n});\n_c = MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["React","useQuery","jsxDEV","_jsxDEV","fetchMessages","res","fetch","json","MessageList","_s","data","status","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Работы Java/Spring-chat-front/front/src/MessageList.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {useQuery} from \"react-query\";\r\n\r\ntype messageType = {\r\n    id: string,\r\n    message: string,\r\n    userName: string\r\n    messageTime: string\r\n}\r\n\r\nconst fetchMessages = async () =>{\r\n    const res = await fetch(\"http://localhost:8080/chat/messages\");\r\n    return res.json();\r\n}\r\n\r\nexport function MessageList() {\r\n\r\n    const {data,status}= useQuery('messages', fetchMessages)\r\n    console.log(data);\r\n    return<div>\r\n        {data}\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n    // const {data: messages, isLoading} = useQuery({\r\n    //     queryFn: async () => {\r\n    //         const response = await fetch(\"http://localhost:8080/chat/messages\");\r\n    //         return await response.json();\r\n    //     },\r\n    //     queryKey: [\"data\"]\r\n    // })\r\n    // if (isLoading) return (\r\n    //     <div>Loading...</div>\r\n    // )\r\n\r\n    // return <div>\r\n    //     <ul>\r\n    //         {messages()}\r\n    //         {/*{messages?.map((message: messageType) => (*/}\r\n    //         {/*    <li key={message.id}>*/}\r\n    //         {/*        <div>*/}\r\n    //         {/*            <h5>{message.userName}</h5>*/}\r\n    //         {/*            <p>{message.message}</p>*/}\r\n    //         {/*        </div>*/}\r\n    //         {/*    </li>*/}\r\n    //         {/*))}*/}\r\n    //     </ul>\r\n    // </div>\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AASrC,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAW;EAC7B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;EAC9D,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;AACrB,CAAC;AAED,OAAO,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAE1B,MAAM;IAACC,IAAI;IAACC;EAAM,CAAC,GAAEV,QAAQ,CAAC,UAAU,EAAEG,aAAa,CAAC;EACxDQ,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC;EACjB,oBAAMP,OAAA;IAAAW,QAAA,EACDJ;EAAI;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;;EAMN;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;AACJ;AAACT,EAAA,CApCeD,WAAW;EAAA,QAEFP,QAAQ;AAAA;AAAAkB,EAAA,GAFjBX,WAAW;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}