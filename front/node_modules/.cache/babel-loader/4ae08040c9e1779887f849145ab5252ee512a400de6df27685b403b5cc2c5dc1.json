{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0420\\u0430\\u0431\\u043E\\u0442\\u044B Java\\\\Spring-chat-front\\\\front\\\\src\\\\TextBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Button, Container, Input, useTheme } from \"@mui/material\";\nimport SendIcon from '@mui/icons-material/Send';\nimport { useMutation, useQueryClient } from \"react-query\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TextBar({\n  userName\n}) {\n  _s();\n  const theme = useTheme();\n  const [message, setMessage] = useState(\"\");\n  const queryClient = useQueryClient();\n  const sendMessageMutation = useMutation(async data => {\n    return await fetch(\"http://localhost:8080/chat/messages\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(data)\n    });\n  }, {\n    onSuccess: async () => {\n      //\n    },\n    onError: () => {\n      //\n    }\n  });\n  const handleSendMessage = () => {\n    if (userName && message) {\n      sendMessageMutation.mutate({\n        message,\n        userName\n      });\n      setMessage(\"\");\n    }\n  };\n  const handleInput = e => {\n    setMessage(e.currentTarget.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"50%\",\n          height: \"40px\"\n        },\n        onChange: handleInput,\n        value: message,\n        autoFocus: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: handleSendMessage,\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 12\n  }, this);\n}\n_s(TextBar, \"6aYDlnsC8BgavKFfiZxHQlF1GBI=\", false, function () {\n  return [useTheme, useQueryClient, useMutation];\n});\n_c = TextBar;\nvar _c;\n$RefreshReg$(_c, \"TextBar\");","map":{"version":3,"names":["React","useState","Button","Container","Input","useTheme","SendIcon","useMutation","useQueryClient","jsxDEV","_jsxDEV","TextBar","userName","_s","theme","message","setMessage","queryClient","sendMessageMutation","data","fetch","method","headers","body","JSON","stringify","onSuccess","onError","handleSendMessage","mutate","handleInput","e","currentTarget","value","children","maxWidth","style","width","height","onChange","autoFocus","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","$RefreshReg$"],"sources":["D:/Работы Java/Spring-chat-front/front/src/TextBar.tsx"],"sourcesContent":["import React, { ChangeEvent, useState } from \"react\";\r\nimport { Button, Container, Input, useTheme } from \"@mui/material\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport { useMutation, useQueryClient } from \"react-query\";\r\n\r\ntype TextBarProps = {\r\n    userName: string;\r\n};\r\n\r\nexport function TextBar({ userName }: TextBarProps) {\r\n    const theme = useTheme();\r\n    const [message, setMessage] = useState(\"\");\r\n    const queryClient = useQueryClient();\r\n\r\n    const sendMessageMutation = useMutation(\r\n        async (data: { message: string; userName: string }) => {\r\n            return await fetch(\"http://localhost:8080/chat/messages\", {\r\n                method: \"POST\",\r\n                headers: {\r\n                    \"Content-Type\": \"application/json\",\r\n                },\r\n                body: JSON.stringify(data)\r\n            });\r\n        },\r\n        {\r\n            onSuccess: async () => {\r\n                //\r\n            },\r\n            onError: () => {\r\n                //\r\n            }\r\n        }\r\n    )\r\n\r\n    const handleSendMessage = () => {\r\n        if (userName && message) {\r\n            sendMessageMutation.mutate({ message, userName });\r\n            setMessage(\"\");\r\n        }\r\n    };\r\n\r\n    const handleInput = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setMessage(e.currentTarget.value);\r\n    }\r\n\r\n    return <div>\r\n        <Container maxWidth=\"xl\">\r\n            <Input style={{ width: \"50%\", height: \"40px\" }} onChange={handleInput} value={message} autoFocus />\r\n            <Button variant=\"contained\" onClick={handleSendMessage}>\r\n                <SendIcon />\r\n            </Button>\r\n        </Container>\r\n    </div>\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAiBC,QAAQ,QAAQ,OAAO;AACpD,SAASC,MAAM,EAAEC,SAAS,EAAEC,KAAK,EAAEC,QAAQ,QAAQ,eAAe;AAClE,OAAOC,QAAQ,MAAM,0BAA0B;AAC/C,SAASC,WAAW,EAAEC,cAAc,QAAQ,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAM1D,OAAO,SAASC,OAAOA,CAAC;EAAEC;AAAuB,CAAC,EAAE;EAAAC,EAAA;EAChD,MAAMC,KAAK,GAAGT,QAAQ,CAAC,CAAC;EACxB,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAMgB,WAAW,GAAGT,cAAc,CAAC,CAAC;EAEpC,MAAMU,mBAAmB,GAAGX,WAAW,CACnC,MAAOY,IAA2C,IAAK;IACnD,OAAO,MAAMC,KAAK,CAAC,qCAAqC,EAAE;MACtDC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,IAAI;IAC7B,CAAC,CAAC;EACN,CAAC,EACD;IACIO,SAAS,EAAE,MAAAA,CAAA,KAAY;MACnB;IAAA,CACH;IACDC,OAAO,EAAEA,CAAA,KAAM;MACX;IAAA;EAER,CACJ,CAAC;EAED,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;IAC5B,IAAIhB,QAAQ,IAAIG,OAAO,EAAE;MACrBG,mBAAmB,CAACW,MAAM,CAAC;QAAEd,OAAO;QAAEH;MAAS,CAAC,CAAC;MACjDI,UAAU,CAAC,EAAE,CAAC;IAClB;EACJ,CAAC;EAED,MAAMc,WAAW,GAAIC,CAAgC,IAAK;IACtDf,UAAU,CAACe,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,oBAAOvB,OAAA;IAAAwB,QAAA,eACHxB,OAAA,CAACP,SAAS;MAACgC,QAAQ,EAAC,IAAI;MAAAD,QAAA,gBACpBxB,OAAA,CAACN,KAAK;QAACgC,KAAK,EAAE;UAAEC,KAAK,EAAE,KAAK;UAAEC,MAAM,EAAE;QAAO,CAAE;QAACC,QAAQ,EAAET,WAAY;QAACG,KAAK,EAAElB,OAAQ;QAACyB,SAAS;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACnGlC,OAAA,CAACR,MAAM;QAAC2C,OAAO,EAAC,WAAW;QAACC,OAAO,EAAElB,iBAAkB;QAAAM,QAAA,eACnDxB,OAAA,CAACJ,QAAQ;UAAAmC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AACV;AAAC/B,EAAA,CA5CeF,OAAO;EAAA,QACLN,QAAQ,EAEFG,cAAc,EAEND,WAAW;AAAA;AAAAwC,EAAA,GAL3BpC,OAAO;AAAA,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}