{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0420\\u0430\\u0431\\u043E\\u0442\\u044B Java\\\\Spring-chat-front\\\\front\\\\src\\\\TextBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Container, Input, useTheme } from \"@mui/material\";\nimport SendIcon from '@mui/icons-material/Send';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function TextBar() {\n  _s();\n  const theme = useTheme();\n  const [message, setMessage] = useState(\"\");\n  const [userName, setuserName] = useState(\"Admin\");\n  useEffect(() => {\n    const sendMessage = async () => {\n      const response = await fetch(\"http://localhost:8080/messages\", {\n        method: \"POST\",\n        body: JSON.stringify({\n          message,\n          userName\n        })\n      });\n      if (response.status === 200) {\n        console.log(\"Сообщение отправлено\");\n      } else {\n        console.log(\"Ошибка при отправке сообщения\");\n      }\n    };\n    sendMessage();\n  }, [message, userName]);\n  const handleSubmit = e => {\n    setMessage(e.currentTarget.value);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"xl\",\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        style: {\n          width: \"50%\",\n          height: \"40px\"\n        },\n        onChange: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: sendMessage,\n        children: /*#__PURE__*/_jsxDEV(SendIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 12\n  }, this);\n}\n_s(TextBar, \"QWSinmsubKxNlPjCvc+0TIzNrqM=\", false, function () {\n  return [useTheme];\n});\n_c = TextBar;\nvar _c;\n$RefreshReg$(_c, \"TextBar\");","map":{"version":3,"names":["React","useEffect","useState","Button","Container","Input","useTheme","SendIcon","jsxDEV","_jsxDEV","TextBar","_s","theme","message","setMessage","userName","setuserName","sendMessage","response","fetch","method","body","JSON","stringify","status","console","log","handleSubmit","e","currentTarget","value","children","maxWidth","style","width","height","onChange","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","_c","$RefreshReg$"],"sources":["D:/Работы Java/Spring-chat-front/front/src/TextBar.tsx"],"sourcesContent":["import React, {ChangeEvent, useEffect, useState} from \"react\";\r\nimport { Button, Container, Input, useTheme} from \"@mui/material\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport {useQuery} from \"react-query\";\r\n\r\nexport function TextBar() {\r\n\r\n    const theme = useTheme();\r\n\r\n    const [message, setMessage] = useState(\"\");\r\n    const [userName,setuserName] = useState(\"Admin\");\r\n\r\n    useEffect(() => {\r\n        const sendMessage = async () => {\r\n            const response = await fetch(\"http://localhost:8080/messages\", {\r\n                method: \"POST\",\r\n                body: JSON.stringify({\r\n                    message,\r\n                    userName,\r\n                }),\r\n            });\r\n\r\n            if (response.status === 200) {\r\n                console.log(\"Сообщение отправлено\");\r\n            } else {\r\n                console.log(\"Ошибка при отправке сообщения\");\r\n            }\r\n        };\r\n\r\n        sendMessage();\r\n    }, [message, userName]);\r\n\r\n    const handleSubmit = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setMessage(e.currentTarget.value);\r\n    };\r\n\r\n    return <div>\r\n        <Container maxWidth=\"xl\">\r\n            <Input style={{width: \"50%\", height: \"40px\"}} onChange={handleSubmit}/>\r\n            <Button variant=\"contained\" onClick={sendMessage}>\r\n                <SendIcon/>\r\n            </Button>\r\n        </Container>\r\n    </div>\r\n}"],"mappings":";;AAAA,OAAOA,KAAK,IAAgBC,SAAS,EAAEC,QAAQ,QAAO,OAAO;AAC7D,SAASC,MAAM,EAAEC,SAAS,EAAEC,KAAK,EAAEC,QAAQ,QAAO,eAAe;AACjE,OAAOC,QAAQ,MAAM,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGhD,OAAO,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAEtB,MAAMC,KAAK,GAAGN,QAAQ,CAAC,CAAC;EAExB,MAAM,CAACO,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,QAAQ,EAACC,WAAW,CAAC,GAAGd,QAAQ,CAAC,OAAO,CAAC;EAEhDD,SAAS,CAAC,MAAM;IACZ,MAAMgB,WAAW,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,gCAAgC,EAAE;QAC3DC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UACjBV,OAAO;UACPE;QACJ,CAAC;MACL,CAAC,CAAC;MAEF,IAAIG,QAAQ,CAACM,MAAM,KAAK,GAAG,EAAE;QACzBC,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;MACvC,CAAC,MAAM;QACHD,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAChD;IACJ,CAAC;IAEDT,WAAW,CAAC,CAAC;EACjB,CAAC,EAAE,CAACJ,OAAO,EAAEE,QAAQ,CAAC,CAAC;EAEvB,MAAMY,YAAY,GAAIC,CAAgC,IAAK;IACvDd,UAAU,CAACc,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC;EACrC,CAAC;EAED,oBAAOrB,OAAA;IAAAsB,QAAA,eACHtB,OAAA,CAACL,SAAS;MAAC4B,QAAQ,EAAC,IAAI;MAAAD,QAAA,gBACpBtB,OAAA,CAACJ,KAAK;QAAC4B,KAAK,EAAE;UAACC,KAAK,EAAE,KAAK;UAAEC,MAAM,EAAE;QAAM,CAAE;QAACC,QAAQ,EAAET;MAAa;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACvE/B,OAAA,CAACN,MAAM;QAACsC,OAAO,EAAC,WAAW;QAACC,OAAO,EAAEzB,WAAY;QAAAc,QAAA,eAC7CtB,OAAA,CAACF,QAAQ;UAAA8B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACP,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AACV;AAAC7B,EAAA,CAvCeD,OAAO;EAAA,QAELJ,QAAQ;AAAA;AAAAqC,EAAA,GAFVjC,OAAO;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}