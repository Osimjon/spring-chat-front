{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0420\\u0430\\u0431\\u043E\\u0442\\u044B Java\\\\Spring-chat-front\\\\front\\\\src\\\\MessageList.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { List, ListItem, Paper } from \"@mui/material/\";\nimport { Avatar, Box, Container } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MessageList() {\n  _s();\n  const fetchMessages = async () => {\n    const res = await fetch(\"http://localhost:8080/chat/messages\");\n    return res.json();\n  };\n  const {\n    data: messages,\n    isLoading\n  } = useQuery({\n    queryFn: async () => {\n      return fetchMessages();\n    },\n    queryKey: [\"data\"]\n  });\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          m: 3\n        },\n        children: messages === null || messages === void 0 ? void 0 : messages.map(message => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 1,\n            sx: {\n              p: 1,\n              paddingLeft: 2,\n              display: 'inline-flex',\n              paddingRight: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              sx: {\n                maxHeight: 27,\n                maxWidth: 27\n              },\n              children: message.userName[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                marginLeft: 2\n              },\n              children: [message.userName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 37\n              }, this), message.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 29\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(MessageList, \"OYuFB7+YlpP9SDs+Ybqqra/UO0g=\", false, function () {\n  return [useQuery];\n});\n_c = MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["React","useQuery","List","ListItem","Paper","Avatar","Box","Container","jsxDEV","_jsxDEV","MessageList","_s","fetchMessages","res","fetch","json","data","messages","isLoading","queryFn","queryKey","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","m","map","message","elevation","p","paddingLeft","display","paddingRight","maxHeight","maxWidth","userName","marginLeft","id","_c","$RefreshReg$"],"sources":["D:/Работы Java/Spring-chat-front/front/src/MessageList.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {useQuery} from \"react-query\";\r\nimport {List, ListItem, Paper} from \"@mui/material/\";\r\nimport {Avatar, Box, Container} from \"@mui/material\";\r\nimport {lightBlue} from \"@mui/material/colors\";\r\n\r\ntype messageType = {\r\n    id: string,\r\n    message: string,\r\n    userName: string\r\n    messageTime: string\r\n}\r\n\r\nexport function MessageList() {\r\n    const fetchMessages = async () => {\r\n        const res = await fetch(\"http://localhost:8080/chat/messages\");\r\n        return res.json();\r\n    }\r\n\r\n    const {data: messages, isLoading} = useQuery({\r\n        queryFn: async () => {\r\n            return fetchMessages();\r\n\r\n        },\r\n        queryKey: [\"data\"]\r\n    })\r\n    if (isLoading) return (\r\n        <div>Loading...</div>\r\n    )\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Container>\r\n                <List sx={{m: 3}}>\r\n                    {messages?.map((message: messageType) => (\r\n                        <ListItem key={message.id}>\r\n                            <Paper elevation={1} sx={{p: 1,paddingLeft:2 , display: 'inline-flex', paddingRight: 3}}>\r\n                                <Avatar sx={{ maxHeight: 27, maxWidth:27 }}>{message.userName[0]}</Avatar>\r\n                                <Box sx={{marginLeft: 2}}>\r\n                                    {message.userName}\r\n                                    <br/>\r\n                                    {message.message}\r\n                                </Box>\r\n                            </Paper>\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Container>\r\n        </div>\r\n    )\r\n\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,QAAQ,QAAO,aAAa;AACpC,SAAQC,IAAI,EAAEC,QAAQ,EAAEC,KAAK,QAAO,gBAAgB;AACpD,SAAQC,MAAM,EAAEC,GAAG,EAAEC,SAAS,QAAO,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAUrD,OAAO,SAASC,WAAWA,CAAA,EAAG;EAAAC,EAAA;EAC1B,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,qCAAqC,CAAC;IAC9D,OAAOD,GAAG,CAACE,IAAI,CAAC,CAAC;EACrB,CAAC;EAED,MAAM;IAACC,IAAI,EAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAGjB,QAAQ,CAAC;IACzCkB,OAAO,EAAE,MAAAA,CAAA,KAAY;MACjB,OAAOP,aAAa,CAAC,CAAC;IAE1B,CAAC;IACDQ,QAAQ,EAAE,CAAC,MAAM;EACrB,CAAC,CAAC;EACF,IAAIF,SAAS,EAAE,oBACXT,OAAA;IAAAY,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAGzB,oBAEIhB,OAAA;IAAAY,QAAA,eACIZ,OAAA,CAACF,SAAS;MAAAc,QAAA,eACNZ,OAAA,CAACP,IAAI;QAACwB,EAAE,EAAE;UAACC,CAAC,EAAE;QAAC,CAAE;QAAAN,QAAA,EACZJ,QAAQ,aAARA,QAAQ,uBAARA,QAAQ,CAAEW,GAAG,CAAEC,OAAoB,iBAChCpB,OAAA,CAACN,QAAQ;UAAAkB,QAAA,eACLZ,OAAA,CAACL,KAAK;YAAC0B,SAAS,EAAE,CAAE;YAACJ,EAAE,EAAE;cAACK,CAAC,EAAE,CAAC;cAACC,WAAW,EAAC,CAAC;cAAGC,OAAO,EAAE,aAAa;cAAEC,YAAY,EAAE;YAAC,CAAE;YAAAb,QAAA,gBACpFZ,OAAA,CAACJ,MAAM;cAACqB,EAAE,EAAE;gBAAES,SAAS,EAAE,EAAE;gBAAEC,QAAQ,EAAC;cAAG,CAAE;cAAAf,QAAA,EAAEQ,OAAO,CAACQ,QAAQ,CAAC,CAAC;YAAC;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAS,CAAC,eAC1EhB,OAAA,CAACH,GAAG;cAACoB,EAAE,EAAE;gBAACY,UAAU,EAAE;cAAC,CAAE;cAAAjB,QAAA,GACpBQ,OAAO,CAACQ,QAAQ,eACjB5B,OAAA;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAI,CAAC,EACJI,OAAO,CAACA,OAAO;YAAA;cAAAP,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACf,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACH;QAAC,GARGI,OAAO,CAACU,EAAE;UAAAjB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OASf,CACb;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACX,CAAC;AAGd;AAACd,EAAA,CAvCeD,WAAW;EAAA,QAMaT,QAAQ;AAAA;AAAAuC,EAAA,GANhC9B,WAAW;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}