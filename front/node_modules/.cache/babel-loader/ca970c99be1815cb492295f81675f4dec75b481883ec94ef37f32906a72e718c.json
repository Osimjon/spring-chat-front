{"ast":null,"code":"var _jsxFileName = \"D:\\\\\\u0420\\u0430\\u0431\\u043E\\u0442\\u044B Java\\\\Spring-chat-front\\\\front\\\\src\\\\MessageList.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { List, ListItem, Paper } from \"@mui/material/\";\nimport { Avatar, Box, Container } from \"@mui/material\";\nimport { lightBlue } from \"@mui/material/colors\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function MessageList() {\n  _s();\n  const fetchMessages = async () => {\n    const res = await fetch(\"http://localhost:8080/chat/messages\");\n    return res.json();\n  };\n  const {\n    data: messages,\n    isLoading\n  } = useQuery({\n    queryFn: async () => {\n      return fetchMessages();\n    },\n    retryInterval: 1000,\n    queryKey: [\"data\"]\n  });\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      sx: {\n        width: '65%'\n      },\n      children: /*#__PURE__*/_jsxDEV(List, {\n        sx: {\n          m: 3,\n          position: 'relative',\n          overflow: 'auto',\n          width: '80%',\n          maxHeight: '70vh'\n        },\n        children: messages === null || messages === void 0 ? void 0 : messages.map(message => /*#__PURE__*/_jsxDEV(ListItem, {\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 1,\n            sx: {\n              p: 1,\n              paddingLeft: 2,\n              display: 'inline-flex',\n              paddingRight: 3\n            },\n            children: [/*#__PURE__*/_jsxDEV(Avatar, {\n              sx: {\n                maxHeight: 27,\n                maxWidth: 27,\n                bgcolor: lightBlue[400]\n              },\n              children: message.userName[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                marginLeft: 2\n              },\n              children: [message.userName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 37\n              }, this), message.message]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 29\n          }, this)\n        }, message.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n_s(MessageList, \"OYuFB7+YlpP9SDs+Ybqqra/UO0g=\", false, function () {\n  return [useQuery];\n});\n_c = MessageList;\nvar _c;\n$RefreshReg$(_c, \"MessageList\");","map":{"version":3,"names":["React","useQuery","List","ListItem","Paper","Avatar","Box","Container","lightBlue","jsxDEV","_jsxDEV","MessageList","_s","fetchMessages","res","fetch","json","data","messages","isLoading","queryFn","retryInterval","queryKey","children","fileName","_jsxFileName","lineNumber","columnNumber","sx","width","m","position","overflow","maxHeight","map","message","elevation","p","paddingLeft","display","paddingRight","maxWidth","bgcolor","userName","marginLeft","id","_c","$RefreshReg$"],"sources":["D:/Работы Java/Spring-chat-front/front/src/MessageList.tsx"],"sourcesContent":["import React from \"react\";\r\nimport {useQuery} from \"react-query\";\r\nimport {List, ListItem, Paper} from \"@mui/material/\";\r\nimport {Avatar, Box, Container} from \"@mui/material\";\r\nimport {lightBlue} from \"@mui/material/colors\";\r\n\r\ntype messageType = {\r\n    id: string,\r\n    message: string,\r\n    userName: string\r\n    messageTime: string\r\n}\r\n\r\nexport function MessageList() {\r\n    const fetchMessages = async () => {\r\n        const res = await fetch(\"http://localhost:8080/chat/messages\");\r\n        return res.json();\r\n    }\r\n\r\n    const {data: messages, isLoading} = useQuery({\r\n        queryFn: async () => {\r\n            return fetchMessages();\r\n        },\r\n        retryInterval:1000,\r\n        queryKey: [\"data\"]\r\n    })\r\n    if (isLoading) return (\r\n        <div>Loading...</div>\r\n    )\r\n\r\n    return (\r\n\r\n        <div>\r\n            <Container sx={{width: '65%'}}>\r\n                <List sx={{\r\n                    m: 3,\r\n                    position: 'relative',\r\n                    overflow: 'auto',\r\n                    width: '80%',\r\n                    maxHeight: '70vh'\r\n                }}  >\r\n                    {messages?.map((message: messageType) => (\r\n                        <ListItem key={message.id}>\r\n                            <Paper elevation={1} sx={{p: 1,paddingLeft:2 , display: 'inline-flex', paddingRight: 3}}>\r\n                                <Avatar sx={{ maxHeight: 27, maxWidth:27, bgcolor:lightBlue[400] }}>{message.userName[0]}</Avatar>\r\n                                <Box sx={{marginLeft: 2}}>\r\n                                    {message.userName}\r\n                                    <br/>\r\n                                    {message.message}\r\n                                </Box>\r\n                            </Paper>\r\n                        </ListItem>\r\n                    ))}\r\n                </List>\r\n            </Container>\r\n        </div>\r\n    )\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}